# Form implementation generated from reading ui file 'control.ui'
#
# Created by: PyQt6 UI code generator 6.2.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import time

from PyQt6 import QtCore, QtWidgets, QtGui
# from util.translate_time import translate_to_second


class Ui_Control(object):
    def setupUi(self, control):
        control.setObjectName("control")
        control.resize(713, 171)
        control.setWindowIcon(QtGui.QIcon(""))
        self.gridFrame = QtWidgets.QFrame(control)
        self.gridFrame.setGeometry(QtCore.QRect(10, 10, 341, 151))
        self.gridFrame.setFrameShape(QtWidgets.QFrame.Shape.Panel)
        self.gridFrame.setLineWidth(2)
        self.gridFrame.setObjectName("gridFrame")
        self.gridLayout = QtWidgets.QGridLayout(self.gridFrame)
        self.gridLayout.setContentsMargins(3, 3, 3, 3)
        self.gridLayout.setObjectName("gridLayout")
        self.timeEdit_hour = QtWidgets.QTimeEdit(self.gridFrame)
        self.timeEdit_hour.setMaximumSize(QtCore.QSize(106, 20))
        self.timeEdit_hour.setObjectName("timeEdit_hour")
        self.gridLayout.addWidget(self.timeEdit_hour, 0, 0, 1, 1)
        self.pushButton_reset = QtWidgets.QPushButton(self.gridFrame)
        self.pushButton_reset.setObjectName("pushButton_reset")
        self.gridLayout.addWidget(self.pushButton_reset, 6, 2, 1, 1)
        self.timeEdit_second = QtWidgets.QTimeEdit(self.gridFrame)
        self.timeEdit_second.setObjectName("timeEdit_second")
        self.gridLayout.addWidget(self.timeEdit_second, 0, 2, 1, 1)
        self.label_all_container = QtWidgets.QLabel(self.gridFrame)
        self.label_all_container.setObjectName("label_all_container")
        self.gridLayout.addWidget(self.label_all_container, 6, 0, 1, 1)
        self.label_count_container = QtWidgets.QLabel(self.gridFrame)
        self.label_count_container.setObjectName("label_count_container")
        self.gridLayout.addWidget(self.label_count_container, 6, 1, 1, 1)
        self.timeEdit_minute = QtWidgets.QTimeEdit(self.gridFrame)
        self.timeEdit_minute.setCurrentSection(QtWidgets.QDateTimeEdit.Section.MinuteSection)
        self.timeEdit_minute.setObjectName("timeEdit_minute")
        self.gridLayout.addWidget(self.timeEdit_minute, 0, 1, 1, 1)
        self.label_hour = QtWidgets.QLabel(self.gridFrame)
        self.label_hour.setObjectName("label_hour")
        self.gridLayout.addWidget(self.label_hour, 1, 0, 1, 1)
        self.label_minute = QtWidgets.QLabel(self.gridFrame)
        self.label_minute.setObjectName("label_minute")
        self.gridLayout.addWidget(self.label_minute, 1, 1, 1, 1)
        self.label_second = QtWidgets.QLabel(self.gridFrame)
        self.label_second.setObjectName("label_second")
        self.gridLayout.addWidget(self.label_second, 1, 2, 1, 1)
        self.label_num_container = QtWidgets.QLabel(self.gridFrame)
        self.label_num_container.setObjectName("label_num_container")
        self.gridLayout.addWidget(self.label_num_container, 4, 0, 1, 1)
        self.spinBox_num_container = QtWidgets.QSpinBox(self.gridFrame)
        self.spinBox_num_container.setObjectName("spinBox_num_container")
        self.gridLayout.addWidget(self.spinBox_num_container, 4, 1, 1, 1)
        self.pushButton_set = QtWidgets.QPushButton(self.gridFrame)
        self.pushButton_set.setObjectName("pushButton_set")
        self.gridLayout.addWidget(self.pushButton_set, 4, 2, 1, 1)
        self.spinBox_position = QtWidgets.QSpinBox(self.gridFrame)
        self.spinBox_position.setObjectName("spinBox_position")
        self.gridLayout.addWidget(self.spinBox_position, 3, 2, 1, 1)
        self.label_position = QtWidgets.QLabel(self.gridFrame)
        self.label_position.setObjectName("label_position")
        self.gridLayout.addWidget(self.label_position, 3, 0, 1, 2)
        self.gridFrame_2 = QtWidgets.QFrame(control)
        self.gridFrame_2.setGeometry(QtCore.QRect(380, 10, 321, 151))
        self.gridFrame_2.setFrameShape(QtWidgets.QFrame.Shape.Panel)
        self.gridFrame_2.setLineWidth(2)
        self.gridFrame_2.setObjectName("gridFrame_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridFrame_2)
        self.gridLayout_2.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_count_cycle = QtWidgets.QLabel(self.gridFrame_2)
        self.label_count_cycle.setObjectName("label_count_cycle")
        self.gridLayout_2.addWidget(self.label_count_cycle, 2, 1, 1, 1)
        self.pushButton_start = QtWidgets.QPushButton(self.gridFrame_2)
        self.pushButton_start.setObjectName("pushButton_start")
        self.gridLayout_2.addWidget(self.pushButton_start, 4, 0, 1, 1)
        self.label_state_pts = QtWidgets.QLabel(self.gridFrame_2)
        self.label_state_pts.setObjectName("label_state_pts")
        self.gridLayout_2.addWidget(self.label_state_pts, 0, 0, 1, 1)
        self.label_num_cycle = QtWidgets.QLabel(self.gridFrame_2)
        self.label_num_cycle.setObjectName("label_num_cycle")
        self.gridLayout_2.addWidget(self.label_num_cycle, 2, 0, 1, 1)
        self.pushButton_stop = QtWidgets.QPushButton(self.gridFrame_2)
        self.pushButton_stop.setObjectName("pushButton_stop")
        self.gridLayout_2.addWidget(self.pushButton_stop, 4, 1, 1, 1)
        self.label_state_radiation = QtWidgets.QLabel(self.gridFrame_2)
        self.label_state_radiation.setObjectName("label_state_radiation")
        self.gridLayout_2.addWidget(self.label_state_radiation, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridFrame_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 1, 0, 1, 1)
        self.label_timer = QtWidgets.QLabel(self.gridFrame_2)
        self.label_timer.setObjectName("label_timer")
        self.gridLayout_2.addWidget(self.label_timer, 1, 1, 1, 1)

        self.retranslateUi(control)
        self.pushButton_reset.clicked.connect(self.timeEdit_hour.clear)  # type: ignore
        self.pushButton_reset.clicked.connect(self.timeEdit_minute.clear)  # type: ignore
        self.pushButton_reset.clicked.connect(self.timeEdit_second.clear)  # type: ignore
        self.spinBox_num_container.valueChanged['int'].connect(self.label_count_container.setNum)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(control)

        # push button
        self.pushButton_set.clicked.connect(self.button_set)
        self.pushButton_start.clicked.connect(self.button_start)

    def button_set(self):
        h = self.timeEdit_hour.text()
        m = self.timeEdit_minute.text()
        s = self.timeEdit_second.text()
        num_container = self.spinBox_num_container.text()
        pos = self.spinBox_position.text()
        with open("time_data.txt", "a") as f:
            f.write("{} {} {} {} {}\n".format(num_container, pos, h, m, s))

    def button_start(self):
        try:
            with open("time_data.txt", "r") as f:
                a = f.readlines()
            no = [line.rstrip().split(" ") for line in a]  # без \n в конце и с нужным количеством элементов

    # цикл проходит про списку с числами в формате string и сравнивает с номером кнтейнера
    # для наглядности добавлена задержка в 1 сек.
    # нужно добавить функционал для каждого контейнера
    # порядок цифр 1-НОМЕР КОНТЕЙНРА 2-ПОЗИЦИЯ ВЫГРЗКИ 3-ЧАСЫ 4-МИНУТЫ 5-СЕКУНДЫ
    # функция translate переводит часы и минуты в секунды
    # time.sleep(translate(int(no[0][2]), int(no[0][3]), int(no[0][4]))) - задержка на время облучения
    # время совпадает с реальностью при данном способе
            try:
                for i in range(len(a)):
                    if no[0][0] == '0':
                        self.label_timer.setText("Введите номер контейнера")
                        # start = time.time()
                        if no[0][0] == '1':
                            print(1)
                            time.sleep(1)
                            # time.sleep(translate(int(no[0][2]), int(no[0][3]), int(no[0][4])))
                            # print("старт")
                            # time.sleep(int(no[0][2]) + int(no[0][3]) + int(no[0][4]))
                            # print(int(no[0][2]) + int(no[0][3]) + int(no[0][4]))
                            if no[1][0] == '2':
                                # end = time.time() - start
                                # print(end)
                                print(2)
                                time.sleep(1)
                                if no[2][0] == '3':
                                    print(3)
                                    time.sleep(1)
                                    if no[3][0] == '4':
                                        print(4)
                                        time.sleep(1)
                                        if no[4][0] == '5':
                                            print(5)
                                            time.sleep(1)
                                            if no[5][0] == '6':
                                                print(6)
                                                time.sleep(1)
                                                if no[6][0] == '7':
                                                    print(7)
                                                    time.sleep(1)
                                                    if no[7][0] == '8':
                                                        print(8)
                                                        time.sleep(1)
                                                        if no[8][0] == '9':
                                                            print(9)
                                                            time.sleep(1)
                                                            if no[9][0] == '10':
                                                                print(10)
                                                                time.sleep(1)
            except IndexError:  # обработка ошибки если меньше 10 контейнеров, ничего не происходит и работет дальше
                pass
        except FileNotFoundError:
            self.label_timer.setText("Время не задано")

    def retranslateUi(self, control):
        _translate = QtCore.QCoreApplication.translate
        control.setWindowTitle(_translate("control", "Управление"))
        self.timeEdit_hour.setDisplayFormat(_translate("control", "H"))
        self.pushButton_reset.setText(_translate("control", "Сброс"))
        self.timeEdit_second.setDisplayFormat(_translate("control", "s"))
        self.label_all_container.setText(_translate("control", "Всего контейнеров"))
        self.label_count_container.setText(_translate("control", "0"))
        self.timeEdit_minute.setDisplayFormat(_translate("control", "m"))
        self.label_hour.setText(_translate("control",
                                           "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; "
                                           "font-weight:600;\">ч.</span></p></body></html>"))
        self.label_minute.setText(_translate("control",
                                             "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; "
                                             "font-weight:600;\">м.</span></p></body></html>"))
        self.label_second.setText(_translate("control",
                                             "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; "
                                             "font-weight:600;\">с.</span></p></body></html>"))
        self.label_num_container.setText(_translate("control", "Номер контейнера:"))
        self.pushButton_set.setText(_translate("control", "Задать"))
        self.label_position.setText(_translate("control", "Введите позицию выгрузки 1 или 2"))
        self.label_count_cycle.setText(_translate("control", "0"))
        self.pushButton_start.setText(_translate("control", "Старт"))
        self.label_state_pts.setText(_translate("control",
                                                "<html><head/><body><p align=\"center\"><span style=\" "
                                                "font-size:10pt; font-weight:600;\">Состояние "
                                                "ПТС</span></p></body></html>"))
        self.label_num_cycle.setText(_translate("control", "Номер цикла:"))
        self.pushButton_stop.setText(_translate("control", "Стоп"))
        self.label_state_radiation.setText(_translate("control",
                                                      "<html><head/><body><p align=\"center\"><span style=\" "
                                                      "font-size:10pt; font-weight:600;\">Состояние "
                                                      "облучения</span></p></body></html>"))
        self.label_2.setText(_translate("control", "Время до конца облучения:"))
        self.label_timer.setText(_translate("control", "TextLabel"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    control = QtWidgets.QDialog()
    ui = Ui_Control()
    ui.setupUi(control)
    control.show()
    sys.exit(app.exec())
